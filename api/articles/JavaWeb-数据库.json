{"title":"JavaWeb-数据库","uid":"bd2363725236602d9ed430e1445ce7eb","slug":"JavaWeb-数据库","date":"2022-06-20T15:09:13.000Z","updated":"2022-06-21T13:50:52.010Z","comments":true,"path":"api/articles/JavaWeb-数据库.json","keywords":null,"cover":"https://ts1.cn.mm.bing.net/th/id/R-C.dc69fd9bf76ae273c6dbc1dbd590a5dd?rik=%2fGezoiUOC4ayoA&riu=http%3a%2f%2fup.deskcity.org%2fpic%2ff5%2f5c%2f51%2ff55c51b50fd0f34c85aea3e33c3a1268.jpg&ehk=urqzVnXj2dRJ41bArufFBbDV2lHH5hL27%2f%2bZsG7i3%2f8%3d&risl=&pid=ImgRaw&r=0","content":"<p>JavaWeb - 数据库</p>\n<h1 id=\"1-数据库的相关概念\"><a class=\"markdownIt-Anchor\" href=\"#1-数据库的相关概念\">#</a> 1、数据库的相关概念</h1>\n<ul>\n<li>数据库</li>\n<li>数据库管理系统</li>\n<li>SQL</li>\n<li>常见的关系型数据库管理系统</li>\n</ul>\n<p>数据库：</p>\n<ul>\n<li>存储数据的仓库，数据是有组织进行存储</li>\n<li>英文：DataBase，简称 DB</li>\n</ul>\n<p>数据库管理系统：</p>\n<ul>\n<li>管理数据库的大型软件</li>\n<li>英文：DataBase Management System，简称 DBMS</li>\n</ul>\n<p>SQL：</p>\n<ul>\n<li>英文：Structured Query Language，简称 SQL，结构化查询语言</li>\n<li>操作关系型数据库的语言</li>\n<li>定义操作所有关系型数据库的统一标准</li>\n<li>每一种数据库的操作方式存在不一样的地方，称为 “方言”</li>\n</ul>\n<p>常见的关系型数据库管理系统：</p>\n<ul>\n<li>Oracle：收费，且非常昂贵，金融银行使用 Oracle 的居多</li>\n<li>MySQL：开源的免费的中小型数据库，在互联网公司使用的非常多</li>\n<li>SQL Server：微软的收费数据库，在 Java 中使用的不多</li>\n<li>PostgreSQL：开源中小型数据库</li>\n<li>DB2：IBM 公司的大型收费数据库产品</li>\n<li>SQLite：嵌入式的微型数据库，如：作为 Android 内置数据库</li>\n<li>MariaDB：开源免费中小型数据库</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本次只学习 MySQL，对于后续的其他数据库，都是使用 SQL 操作的，而且 SQL 可以操作市面上所有的关系型数据库</p></blockquote>\n<h1 id=\"2-mysql数据库\"><a class=\"markdownIt-Anchor\" href=\"#2-mysql数据库\">#</a> 2、MySQL 数据库</h1>\n<ul>\n<li>MySQL 安装</li>\n<li>MySQL 卸载</li>\n<li>MySQL 配置</li>\n<li>MySQL 登录、退出</li>\n</ul>\n<p>安装、登录、卸载、配置等参见安装手册</p>\n<ul>\n<li>MySQL 数据模型</li>\n</ul>\n<p>MySQL 数据库模型：</p>\n<ul>\n<li>关系型数据库\n<ul>\n<li>关系型数据库是建立在关系模型基础上的数据库，简单说，关系型数据库是由多张能够相互连接的二维表组成的数据库</li>\n<li>优点：\n<ol>\n<li>都是使用表结构，格式一致，易于维护</li>\n<li>使用通用的 SQL 语言操作，使用方便，可用于复杂查询</li>\n<li>数据存储在磁盘中，安全（存在硬盘中就是<strong>持久化存储</strong>）</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>不通过表存取的就是非关系型数据库</li>\n<li>数据库是通过文件夹实现的，MySQL 的数据存放在<strong> data</strong> 目录下，每个文件夹对应一个数据库</li>\n</ul>\n<h1 id=\"3-sql通用语法\"><a class=\"markdownIt-Anchor\" href=\"#3-sql通用语法\">#</a> 3、SQL 通用语法</h1>\n<ol>\n<li>SQL 语句可以以单行或多行书写，以分号结尾</li>\n<li>可以使用空格或制表符来提高可读性</li>\n<li>MySQL 数据库的 SQL 语句不区分大小写，但是关键字<strong>建议以大写来表示</strong></li>\n<li>3 种注释：\n<ul>\n<li>单行注释：<strong>– 注释内容</strong>  或 <strong>#注释内容</strong></li>\n<li>多行注释：/* 注释内容 */</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"4-sql分类\"><a class=\"markdownIt-Anchor\" href=\"#4-sql分类\">#</a> 4、SQL 分类</h1>\n<p>SQL 语句根据其功能，主要分为四类：DDL、DML、DQL、DCL。 DDL：</p>\n<p>DDL：Data Definition Language 数据定义语言，用来定义数据库对象 (数据库，表， 字段)</p>\n<p>DML：Data Manipulation Language 数据操作语言，用来对数据库表中的数据进行<strong>增删改</strong></p>\n<p>DQL： Data Query Language 数据查询语言，用来<strong>查询</strong>数据库中表的记录</p>\n<p>DCL： Data Control Language 数据控制语言，用来创建数据库用户、控制数据库的<strong>访问权限</strong></p>\n<p><img src=\"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/image-20220620221541057.png\" alt=\"image-20220620221541057\"></p>\n<h1 id=\"5-ddl操作数据库-表\"><a class=\"markdownIt-Anchor\" href=\"#5-ddl操作数据库-表\">#</a> 5、DDL：操作数据库、表</h1>\n<h2 id=\"51-操作数据库crud\"><a class=\"markdownIt-Anchor\" href=\"#51-操作数据库crud\">#</a> 5.1 操作数据库：CRUD</h2>\n<ol>\n<li>\n<p>C (Create)：创建</p>\n<ul>\n<li>\n<p>创建数据库：<strong>create database 数据库名称；</strong></p>\n</li>\n<li>\n<p>创建数据库，判断是否存在，不存在再创建：<strong>create database if not exists 数据库名称；</strong></p>\n</li>\n<li>\n<p>创建数据库，并指定字符集：<strong>create database 数据库名称 character set 字符集名；</strong></p>\n</li>\n<li>\n<p>创建一个 db4 的数据库，判断是否存在，并指定字符集为 gbk：<strong>create database if not exists db4 character set gbk;</strong></p>\n</li>\n</ul>\n</li>\n<li>\n<p>R (Retrieve)：查询</p>\n<ul>\n<li>查询所有数据库的名称：<strong>show databases;</strong></li>\n<li>查询创建数据库的 SQL 语句、字符集：<strong>show create database 数据库名；</strong></li>\n</ul>\n</li>\n<li>\n<p>U (Update)：修改</p>\n<ul>\n<li>修改数据库的字符集：<strong>alter database 数据库名称 character set 字符集名；</strong></li>\n</ul>\n</li>\n<li>\n<p>D (Delete)：删除</p>\n<ul>\n<li>删除数据库：<strong>drop database 数据库名称；</strong></li>\n<li>判断数据库是否存在，存在再删除：<strong>drop database if exists 数据库名称；</strong></li>\n</ul>\n</li>\n<li>\n<p>使用数据库</p>\n<ul>\n<li>查询当前正在使用的数据库名称：<strong>select database();</strong></li>\n<li>使用数据库：<strong>use 数据库名称；</strong></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"52-操作表crud\"><a class=\"markdownIt-Anchor\" href=\"#52-操作表crud\">#</a> 5.2 操作表：CRUD</h2>\n<ol>\n<li>\n<p>C (Create)：创建</p>\n<ul>\n<li>\n<p>语法：create table 表名 (</p>\n<p>列明 1 数据类型 1,</p>\n<p>列名 2 数据类型 2,</p>\n<p>…</p>\n<p>列明 n 数据类型 n</p>\n<p>);# 注意最后一列不需要加逗号</p>\n</li>\n<li>\n<p>数据类型</p>\n<ul>\n<li>int：整数类型\n<ul>\n<li>age int,</li>\n</ul>\n</li>\n<li>double：小数类型\n<ul>\n<li>score double (5,2)_最多有 5 位，小数点后 2 位</li>\n</ul>\n</li>\n<li>date：日期，只包含年月日，yyyy-MM-dd</li>\n<li>datetime：日期，包含年月日时分秒，yyyy-MM-dd HH:mm:ss</li>\n<li>timestamp：时间戳类型，包含年月日时分秒，如果将来不给这个字段赋值或赋值为 null，则默认使用当前的系统时间来<strong>自动赋值</strong></li>\n<li>varchar：字符串\n<ul>\n<li>name varchar (20)：姓名最大 20 个字符</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>复制一张表，如复制一张 student 为 student1：<strong>create table student1 like student;</strong></p>\n</li>\n<li>\n<p>创建一张学生表</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">mysql<span class=\"token operator\">></span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> student<span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span> id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span> name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span> age <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span> score <span class=\"token keyword\">double</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span> birthday <span class=\"token keyword\">date</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span> insert_time <span class=\"token keyword\">timestamp</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>R (Retrieve)：查询</p>\n<ul>\n<li>查询某个数据库中所有表的名称：<strong>show tables;</strong></li>\n<li>查询表结构：<strong>desc 表名称；</strong></li>\n<li>查询表的创建语句：<strong>show create table 表名；</strong></li>\n</ul>\n</li>\n<li>\n<p>U (Update)：修改</p>\n<ul>\n<li>修改表名：<strong>alter table 表名 rename to 新表名；</strong></li>\n<li>修改表的字符集：<strong>show create table 表名；alter table 表名 character set 新字符集名；</strong></li>\n<li>添加一列：<strong>alter table 表名 add 列名 数据类型；</strong></li>\n<li>修改列名称、类型：<strong>alter table 表名 change 旧列名 新列明 新数据类型；<strong> 或</strong> alter table 表名 modify 列名 新数据类型；</strong></li>\n<li>删除列：<strong>alter table 表名 drop 列名；</strong></li>\n</ul>\n</li>\n<li>\n<p>D (Delete)：删除</p>\n<ul>\n<li>删除表：<strong>drop table 表名；</strong></li>\n<li>如果存在，再删除：<strong>drop table if exists 表名；</strong></li>\n</ul>\n</li>\n</ol>\n<p><img src=\"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/image-20220620224922952.png\" alt=\"image-20220620224922952\"></p>\n<h1 id=\"6-dml增删改表中数据\"><a class=\"markdownIt-Anchor\" href=\"#6-dml增删改表中数据\">#</a> 6、DML：增删改表中数据</h1>\n<h2 id=\"51-添加数据\"><a class=\"markdownIt-Anchor\" href=\"#51-添加数据\">#</a> 5.1 添加数据</h2>\n<ul>\n<li>基本语法：<strong>insert into 表名 (列名 1, 列明 2,…, 列明 n) values (值 1, 值 2, 值 3,…, 值 n)</strong></li>\n<li>注意：\n<ol>\n<li>列明和值要<strong>一一对应</strong></li>\n<li>如果表名后不定义列明，则默认给所有列添加值</li>\n<li>除了数字类型，其他类型需要使用引号 (单双引号都可以) 引起来</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"52-删除数据\"><a class=\"markdownIt-Anchor\" href=\"#52-删除数据\">#</a> 5.2 删除数据</h2>\n<ul>\n<li>基本语法：delete from 表名 [where 条件];\n<ul>\n<li>删除 id 为 2 的值：delete from stu where id = 2;</li>\n</ul>\n</li>\n<li>注意：\n<ol>\n<li>如果不加条件，则<strong>删除表中所有记录</strong>，非常危险不要使用</li>\n<li>如果要删除所有记录，两种方法：\n<ol>\n<li>delete from 表名；-- 不推荐使用，因为有多少条记录就执行多少次指令，效率很低</li>\n<li>**truncate table 表名；** 先删除表，再创建一个和原表一样的空表，推荐使用，效率更高</li>\n</ol>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"53-修改数据\"><a class=\"markdownIt-Anchor\" href=\"#53-修改数据\">#</a> 5.3 修改数据</h2>\n<ul>\n<li>基本语法：update 表名 set 列名 1 = 值 1, 列明 2 = 值 2,…, 列明 n = 值 n [where 条件];\n<ul>\n<li>将 stu 表内的 id 为 3 的 age 改为 117： <code>UPDATE stu SET age = 117 WHERE id = 3;</code></li>\n<li>更改多条数据： <code>UPDATE stu SET age = 18, score = 100 WHERE id = 2;</code></li>\n</ul>\n</li>\n<li>注意：\n<ol>\n<li>如果不加任何条件，则会将表中所有记录全部修改</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"7-dql查询表中的记录\"><a class=\"markdownIt-Anchor\" href=\"#7-dql查询表中的记录\">#</a> 7、DQL：查询表中的记录</h1>\n<ul>\n<li>select * from 表名；</li>\n</ul>\n<h2 id=\"71-语法\"><a class=\"markdownIt-Anchor\" href=\"#71-语法\">#</a> 7.1 语法</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>select</p>\n<p>​\t字段列表</p>\n<p>from</p>\n<p>​\t表名列表</p>\n<p>where</p>\n<p>​\t条件列表</p>\n<p>group by</p>\n<p>​\t分组字段</p>\n<p>having</p>\n<p>​\t分组之后的条件</p>\n<p>order by</p>\n<p>​\t排序</p>\n<p>limit</p>\n<p>​\t分页限定</p></blockquote>\n<h2 id=\"72-基础查询\"><a class=\"markdownIt-Anchor\" href=\"#72-基础查询\">#</a> 7.2 基础查询</h2>\n<ol>\n<li>查询多个字段：<strong>select 字段名 1, 字段名 2,… 字段名 n from 表名；</strong>\n<ul>\n<li>注意：如果查询所有字段，则可以使用 * 来替代字段列表</li>\n</ul>\n</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询姓名 和 年龄</span>\n<span class=\"token keyword\">SELECT</span> NAME<span class=\"token punctuation\">,</span>age <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>去除重复：<strong>select distinct 列名 1, 列明 2,… from 表名；</strong></li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 去除重复的结果集</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> address <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> NAME<span class=\"token punctuation\">,</span>address <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#当查询多个字段时，只有两个字段组合的值相同了之后才会去重</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>计算列：一般可以使用四则运算来计算列的值，一般只会进行数值型的运算\n<ul>\n<li>ifnull (表达式 1, 表达式 2)：null 参与的运算，计算结果都是 null\n<ul>\n<li>表达式 1：哪个字段需要判断是否为 Null</li>\n<li>表达式 2：该字段为 null 则替换后的值</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 计算math 和 English 分数之和</span>\n<span class=\"token keyword\">SELECT</span> NAME<span class=\"token punctuation\">,</span>math<span class=\"token punctuation\">,</span>english <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> NAME<span class=\"token punctuation\">,</span>math<span class=\"token punctuation\">,</span>english<span class=\"token punctuation\">,</span>math<span class=\"token operator\">+</span>english <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 如果有null参与的运算,计算结果都为null</span>\n<span class=\"token keyword\">SELECT</span> NAME<span class=\"token punctuation\">,</span>math<span class=\"token punctuation\">,</span>english<span class=\"token punctuation\">,</span>math<span class=\"token operator\">+</span>IFNULL<span class=\"token punctuation\">(</span>english<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- ifnull(a,b)：如果a为null，替换为b</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"4\">\n<li>起别名：列名 as 重命名  或  列明 + 空格 + 重命名\n<ul>\n<li>as 可以省略，用一个或多个空格代替</li>\n</ul>\n</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 起别名</span>\n<span class=\"token keyword\">SELECT</span> NAME<span class=\"token punctuation\">,</span>math<span class=\"token punctuation\">,</span>english<span class=\"token punctuation\">,</span>math<span class=\"token operator\">+</span>IFNULL<span class=\"token punctuation\">(</span>english<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">'总分'</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> NAME<span class=\"token punctuation\">,</span>math 数学<span class=\"token punctuation\">,</span>english 英语<span class=\"token punctuation\">,</span>math<span class=\"token operator\">+</span>IFNULL<span class=\"token punctuation\">(</span>english<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token string\">'总分'</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"73-条件查询\"><a class=\"markdownIt-Anchor\" href=\"#73-条件查询\">#</a> 7.3 条件查询</h2>\n<ol>\n<li>where 子句后跟条件</li>\n<li>运算符\n<ul>\n<li>&gt;、&lt;、&lt;=、&gt;=、=、&lt;&gt;</li>\n<li>BETWEEN…AND</li>\n<li>IN (集合)</li>\n<li>LIKE ‘张 %’ ：模糊查询\n<ul>\n<li>_：单个任意字符</li>\n<li>%：多个任意字符</li>\n</ul>\n</li>\n<li>IS NULL</li>\n<li>and 或 &amp;&amp;</li>\n<li>or 或 ||</li>\n<li>not 或！</li>\n</ul>\n</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询年龄大于20岁</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">>=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询年龄等于20岁</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询年龄不等于20岁</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">!=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">&lt;></span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查询年龄大于等于20，小于等于30</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">>=</span> <span class=\"token number\">20</span> <span class=\"token operator\">AND</span> age <span class=\"token operator\">&lt;=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">20</span> <span class=\"token operator\">AND</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询年龄22岁，19岁，25岁的信息</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">=</span> <span class=\"token number\">22</span> <span class=\"token operator\">OR</span> age <span class=\"token operator\">=</span> <span class=\"token number\">19</span> <span class=\"token operator\">OR</span> age <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查询英语成绩为null （null值不能使用=判断，只能用is null）</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> english <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询英语成绩不为null</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> english <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查询姓马的有哪些</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> NAME <span class=\"token operator\">LIKE</span> <span class=\"token string\">\"马%\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询第二个字是化的人</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> NAME <span class=\"token operator\">LIKE</span> <span class=\"token string\">\"_化%\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询姓名是三个字的人</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> NAME <span class=\"token operator\">LIKE</span> <span class=\"token string\">\"___\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询姓名中包含马的人</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> NAME <span class=\"token operator\">LIKE</span> <span class=\"token string\">\"%马%\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"74-排序查询\"><a class=\"markdownIt-Anchor\" href=\"#74-排序查询\">#</a> 7.4 排序查询</h2>\n<ul>\n<li>语法：order by 字句\n<ul>\n<li>order by 排序字段 1 排序方式 1, 排序字段 2 排序方式 2 …;</li>\n</ul>\n</li>\n<li>排序方式\n<ul>\n<li>ASC：升序，<strong>默认</strong></li>\n<li>DESC：降序</li>\n</ul>\n</li>\n<li>注意：\n<ul>\n<li>如果有多个排序条件，则当前面的条件值一样时，才会判断第二条件</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 按照数学成绩排序</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> math <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> math <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 按照数学成绩排名，如果数学成绩一样，则按照英语成绩排名，都是升序</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> math <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">,</span> english <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"75-聚合函数\"><a class=\"markdownIt-Anchor\" href=\"#75-聚合函数\">#</a> 7.5 聚合函数</h2>\n<ul>\n<li>将一列数据作为一个整体，进行纵向的计算。\n<ol>\n<li>count：计算个数\n<ol>\n<li>一般选择非空的列：主键</li>\n<li>count (*) —— 只要这一行数据有一个不为 null 就算作一个数据</li>\n</ol>\n</li>\n<li>max：计算最大值</li>\n<li>min：计算最小值</li>\n<li>sum：计算和</li>\n<li>avg：计算平均值</li>\n</ol>\n</li>\n<li>注意：聚合函数的计算排除了 null 值\n<ul>\n<li>解决方案：选择不包含空值的列进行计算，或使用<strong> IFNULL</strong> 函数进行计算</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询学生的人数</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>NAME<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>IFNULL<span class=\"token punctuation\">(</span>english<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 数学成绩的最大值和最小值</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 计算数学成绩的和</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 计算数学成绩的平均值</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> student<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"76-分组查询\"><a class=\"markdownIt-Anchor\" href=\"#76-分组查询\">#</a> 7.6 分组查询</h2>\n<ul>\n<li>基本语法：<strong>group by 分组字段</strong></li>\n<li>注意：\n<ol>\n<li>分组之后查询的字段：<strong>分组字段、聚合函数</strong>，写其他字段没有任何意义</li>\n<li>where 和 having 的区别：\n<ol>\n<li>where 在分组之前进行限定，如果不满足这个条件则不参与分组。having 是在分组之后进行限定，如果不满足结果则不会被查询出来。</li>\n<li>where 后<strong>不可以跟聚合函数</strong>，having<strong> 可以进行聚合函数的判断</strong></li>\n</ol>\n</li>\n</ol>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 按照性别分组，分别查男女同学的平均分</span>\n<span class=\"token keyword\">SELECT</span> sex<span class=\"token punctuation\">,</span><span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> sex<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 按照性别分组，分别查男女同学的平均分、人数</span>\n<span class=\"token keyword\">SELECT</span> sex<span class=\"token punctuation\">,</span><span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> sex<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 按照性别分组，分别查男女同学的平均分、人数,要求分数低于70分的不参与分组</span>\n<span class=\"token keyword\">SELECT</span> sex<span class=\"token punctuation\">,</span><span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> math <span class=\"token operator\">></span> <span class=\"token number\">70</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> sex<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 按照性别分组，分别查男女同学的平均分、人数,要求分数低于70分的不参与分组,分组之后人数要大于两个人</span>\n<span class=\"token keyword\">SELECT</span> sex<span class=\"token punctuation\">,</span><span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> math <span class=\"token operator\">></span> <span class=\"token number\">70</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> sex <span class=\"token keyword\">HAVING</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> sex<span class=\"token punctuation\">,</span><span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> 人数 <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> math <span class=\"token operator\">></span> <span class=\"token number\">70</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> sex <span class=\"token keyword\">HAVING</span> 人数<span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"77-分页查询\"><a class=\"markdownIt-Anchor\" href=\"#77-分页查询\">#</a> 7.7 分页查询</h2>\n<ul>\n<li>基本语法：limit 开始的索引，每页查询的条数；</li>\n<li>公式：*<em> 开始的索引 = （当前页码 - 1）<em>每页显示的条数</em></em></li>\n<li>分页操作是一个<strong>方言</strong></li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 每页显示3条记录 第一页</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 每页显示3条记录 第二页</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 每页显示3条记录 第三页</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"8-约束\"><a class=\"markdownIt-Anchor\" href=\"#8-约束\">#</a> 8、约束</h1>\n<ul>\n<li>概念：对表中的数据进行限定，保证数据的正确性、有效性和完整性</li>\n<li>分类：\n<ol>\n<li>主键约束：primary key</li>\n<li>非空约束：not null</li>\n<li>唯一约束：unique</li>\n<li>外键约束：foreign key</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"81-非空约束\"><a class=\"markdownIt-Anchor\" href=\"#81-非空约束\">#</a> 8.1 非空约束</h2>\n<ul>\n<li>\n<p>非空约束：not null</p>\n<ol>\n<li>\n<p>在创建表的时候添加非空约束</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token punctuation\">(</span>\n    id <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n    NAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 删除name列的非空约束</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token keyword\">MODIFY</span> NAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>创建完表后添加非空约束</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token keyword\">MODIFY</span> NAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"82-唯一约束\"><a class=\"markdownIt-Anchor\" href=\"#82-唯一约束\">#</a> 8.2 唯一约束</h2>\n<ul>\n<li>唯一约束：unique，某一列的值不能重复</li>\n<li>注意\n<ol>\n<li>唯一约束可以有 null 值，但是只能有一条记录为 null</li>\n</ol>\n</li>\n</ul>\n<ol>\n<li>在创建表的时候添加唯一约束</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 在创建表时添加唯一约束</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> stu<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\tphone_number <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNIQUE</span> <span class=\"token comment\">-- 手机号</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>创建完表后添加唯一约束</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token keyword\">MODIFY</span> phone_number <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"3\">\n<li>删除唯一约束</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">INDEX</span> phone_number<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"83-主键约束\"><a class=\"markdownIt-Anchor\" href=\"#83-主键约束\">#</a> 8.3 主键约束</h2>\n<ul>\n<li>主键：primary key</li>\n<li>注意\n<ol>\n<li>含义：<strong>非空且唯一</strong></li>\n<li>一张表中只能有一个主键，可以多个字段组成联合主键</li>\n<li>主键就是表中记录的唯一标识</li>\n</ol>\n</li>\n</ul>\n<ol>\n<li>在创建表时添加主键</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\tNAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>删除主键</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"3\">\n<li>创建完表后添加主键</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token keyword\">MODIFY</span> id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"84-主键约束-自动增长\"><a class=\"markdownIt-Anchor\" href=\"#84-主键约束-自动增长\">#</a> 8.4 主键约束 - 自动增长</h2>\n<ul>\n<li>概念：如果某一列是数值类型的，使用 <strong>auto_increment</strong> 可以完成值的自动增长</li>\n<li>注意\n<ol>\n<li>自动增长的值只和上一条的值有关</li>\n<li>自动增长一般会和主键联合使用</li>\n<li>也可以不和主键一起用，但是用的很少</li>\n</ol>\n</li>\n</ul>\n<ol>\n<li>在创建表时添加主键，并完成主键自增长</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n\tNAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>删除自动增长</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token keyword\">MODIFY</span> id <span class=\"token keyword\">INT</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 这样不会删除主键，但是可以删除自动增长</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>创建表完成后添加自动增长</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token keyword\">MODIFY</span> id <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- primaey key可加可不加</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"85-外键约束\"><a class=\"markdownIt-Anchor\" href=\"#85-外键约束\">#</a> 8.5 外键约束</h2>\n<ul>\n<li>外键约束：foreign key，让表与表产生关系，从而保证数据的正确性</li>\n</ul>\n<ol>\n<li>在创建表时添加外键</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>语法：</p>\n<p>create table 表名 (</p>\n<p>​\t…</p>\n<p>​\t外键列</p>\n<p>​\tconstraint 外键名称 foreign key 外键列 references 主表名称 (主表列名称);</p>\n<p>)</p></blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> employee<span class=\"token punctuation\">(</span>\n\tid <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span>\n\tNAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tage <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\tdep_id <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 外键对应主表的主键</span>\n\t<span class=\"token keyword\">CONSTRAINT</span> emp_dept_id <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>dep_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> department<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>删除外键</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名 <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> 外键名称<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> employee <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> emp_dept_id<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>在创建表之后添加外键</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名称 <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> 外键名称 <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>外键字段<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> 主表名称<span class=\"token punctuation\">(</span>主表列明<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> employee <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> emp_dep_id <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>dep_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> department<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"86-外键约束-级联操作\"><a class=\"markdownIt-Anchor\" href=\"#86-外键约束-级联操作\">#</a> 8.6 外键约束 - 级联操作</h2>\n<ol>\n<li>添加外键，设置级联更新\n<ul>\n<li>概念：父表的主键在更新时，子表的外键值也跟着更新</li>\n</ul>\n</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名称 <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> 外键名称 <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>外键字段<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> 主表名称<span class=\"token punctuation\">(</span>主表列明<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">CASCADE</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"2\">\n<li>添加外键，设置级联删除\n<ul>\n<li>概念：父表的主键在删除时，会自动删除子表外键中有该父表主键值的那一行数据</li>\n</ul>\n</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名称 <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> 外键名称 <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>外键字段<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> 主表名称<span class=\"token punctuation\">(</span>主表列明<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">CASCADE</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"3\">\n<li>级联更新和删除可以在一行内一起使用，如</li>\n</ol>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 表名称 <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> 外键名称 <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>外键字段<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> 主表名称<span class=\"token punctuation\">(</span>主表列明<span class=\"token punctuation\">)</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">CASCADE</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">CASCADE</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>实际开发情况中级联的使用是非常谨慎的</li>\n</ul>\n<h1 id=\"9-数据库的设计\"><a class=\"markdownIt-Anchor\" href=\"#9-数据库的设计\">#</a> 9、数据库的设计</h1>\n<ol>\n<li>多表之间的关系</li>\n<li>数据库设计的范式</li>\n</ol>\n<h2 id=\"91-多表之间的关系\"><a class=\"markdownIt-Anchor\" href=\"#91-多表之间的关系\">#</a> 9.1 多表之间的关系</h2>\n<ol>\n<li>一对一（了解）：\n<ul>\n<li>如：人和身份证</li>\n<li>分析：一个人只有一个身份证，一个身份证也只能对应一个人</li>\n</ul>\n</li>\n<li>一对多（多对一）：\n<ul>\n<li>如：部门和员工</li>\n<li>分析：一个部门有多个员工，一个员工只能对应一个部门</li>\n</ul>\n</li>\n<li>多对多：\n<ul>\n<li>如：学生和课程</li>\n<li>分析：一个学生可以选择很多课程，一个课程也可以被很多学生选择</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"92-一对多表关系实现\"><a class=\"markdownIt-Anchor\" href=\"#92-一对多表关系实现\">#</a> 9.2 一对多表关系实现</h2>\n<ul>\n<li>如：部门和员工</li>\n</ul>\n<p><img src=\"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/image-20220621205001667.png\" alt=\"image-20220621205001667\"></p>\n<ul>\n<li>实现方式：在多的地方去建立外键指向 1 的一方的主键</li>\n<li>在员工表里添加一个外键指向部门表的主键</li>\n</ul>\n<h2 id=\"93-多对多表关系实现\"><a class=\"markdownIt-Anchor\" href=\"#93-多对多表关系实现\">#</a> 9.3 多对多表关系实现</h2>\n<ul>\n<li>如：学生和课程</li>\n</ul>\n<p><img src=\"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/image-20220621205745740.png\" alt=\"image-20220621205745740\"></p>\n<ul>\n<li>实现方式：借助第三章中间表，中间表至少包含两个字段，分别指向两个表的主键</li>\n<li>两个字段要使用联合主键 ——foreign key (sid,cid);</li>\n</ul>\n<h2 id=\"94-一对一表关系实现\"><a class=\"markdownIt-Anchor\" href=\"#94-一对一表关系实现\">#</a> 9.4 一对一表关系实现</h2>\n<ul>\n<li>如：人和身份证</li>\n</ul>\n<p><img src=\"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/image-20220621210236802.png\" alt=\"image-20220621210236802\"></p>\n<ul>\n<li>实现方式：在任何一方添加唯一外键指向另一方的主键</li>\n<li>实际情况中一般会把两张表合成一张表</li>\n</ul>\n<h1 id=\"10-范式\"><a class=\"markdownIt-Anchor\" href=\"#10-范式\">#</a> 10、范式</h1>\n<ul>\n<li>概念：在设计数据库时需要遵循的规范。要遵循后边的范式要求，必须先遵循前边的所有范式要求</li>\n<li>分类：\n<ol>\n<li>第一范式（1NF）：每一列都是不可分割的原子数据项</li>\n<li>第二范式（2NF）：在第一范式的基础上，非码属性必须完全依赖于候选码（在 1NF 基础上消除非主属性对主码的部分函数依赖 ）\n<ul>\n<li>几个概念\n<ol>\n<li>函数依赖：A-----&gt;B，如果通过 A 属性（属性组）的值，可以确定唯一 B 属性的值，则称 B 依赖于 A</li>\n<li>完全函数依赖：A-----&gt;B，如果 A 是一个属性组，则 B 属性值的确定需要 A 中所有的属性值</li>\n<li>部分函数依赖：A-----&gt;B，如果 A 是一个属性组，则 B 属性值的确定只需要依赖于 A 属性组中某一些值即可</li>\n<li>传递函数依赖：A-----&gt;B，B-----&gt;C，如果通过 A 属性（属性组）的值，可以确定唯一 B 属性的值，再通过 B 属性（属性组）的值可以确定唯一 C 属性的值，则称 C 传递函数依赖于 A</li>\n<li>码：如果在一张表中，一个属性或属性组被其他所有属性所完全依赖，则称这个属性（属性组）为该表的码</li>\n<li>主属性：码属性组中的所有属性</li>\n<li>非主属性：除去码属性组的属性</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>第三范式（3NF）：在 2NF 的基础上，任何非主属性不依赖于其他非主属性（在 2NF 基础上消除传递依赖）</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"11-数据库的备份和还原\"><a class=\"markdownIt-Anchor\" href=\"#11-数据库的备份和还原\">#</a> 11、数据库的备份和还原</h1>\n<h2 id=\"111-命令行\"><a class=\"markdownIt-Anchor\" href=\"#111-命令行\">#</a> 11.1 命令行</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">备份：\nmysqldump -u用户名 -p密码 数据库名 <span class=\"token operator\">></span> 保存的路径\n还原：\n<span class=\"token number\">1</span>. 登录数据库\n<span class=\"token number\">2</span>. 创建数据库\n<span class=\"token number\">3</span>. 使用数据库\n<span class=\"token number\">4</span>. 执行文件，source 文件路径<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"112-图形化工具\"><a class=\"markdownIt-Anchor\" href=\"#112-图形化工具\">#</a> 11.2 图形化工具</h2>\n<ul>\n<li>根据使用的工具进行导出和导入</li>\n</ul>\n","feature":true,"text":"JavaWeb - 数据库 # 1、数据库的相关概念 数据库 数据库管理系统 SQL 常见的关系型数据库管理系统 数据库： 存储数据的仓库，数据是有组织进行存储 英文：DataBase，简称 DB 数据库管理系统： 管理数据库的大型软件 英文：DataBase Managemen...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":2,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":2,"path":"api/tags/JavaWeb.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\"> 1、数据库的相关概念</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-mysql%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\"> 2、MySQL 数据库</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-sql%E9%80%9A%E7%94%A8%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\"> 3、SQL 通用语法</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-sql%E5%88%86%E7%B1%BB\"><span class=\"toc-text\"> 4、SQL 分类</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-ddl%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93-%E8%A1%A8\"><span class=\"toc-text\"> 5、DDL：操作数据库、表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#51-%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93crud\"><span class=\"toc-text\"> 5.1 操作数据库：CRUD</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#52-%E6%93%8D%E4%BD%9C%E8%A1%A8crud\"><span class=\"toc-text\"> 5.2 操作表：CRUD</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-dml%E5%A2%9E%E5%88%A0%E6%94%B9%E8%A1%A8%E4%B8%AD%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\"> 6、DML：增删改表中数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#51-%E6%B7%BB%E5%8A%A0%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\"> 5.1 添加数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#52-%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\"> 5.2 删除数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#53-%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\"> 5.3 修改数据</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#7-dql%E6%9F%A5%E8%AF%A2%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%AE%B0%E5%BD%95\"><span class=\"toc-text\"> 7、DQL：查询表中的记录</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#71-%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\"> 7.1 语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#72-%E5%9F%BA%E7%A1%80%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\"> 7.2 基础查询</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#73-%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\"> 7.3 条件查询</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#74-%E6%8E%92%E5%BA%8F%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\"> 7.4 排序查询</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#75-%E8%81%9A%E5%90%88%E5%87%BD%E6%95%B0\"><span class=\"toc-text\"> 7.5 聚合函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#76-%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\"> 7.6 分组查询</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#77-%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\"> 7.7 分页查询</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#8-%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\"> 8、约束</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#81-%E9%9D%9E%E7%A9%BA%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\"> 8.1 非空约束</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#82-%E5%94%AF%E4%B8%80%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\"> 8.2 唯一约束</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#83-%E4%B8%BB%E9%94%AE%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\"> 8.3 主键约束</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#84-%E4%B8%BB%E9%94%AE%E7%BA%A6%E6%9D%9F-%E8%87%AA%E5%8A%A8%E5%A2%9E%E9%95%BF\"><span class=\"toc-text\"> 8.4 主键约束 - 自动增长</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#85-%E5%A4%96%E9%94%AE%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\"> 8.5 外键约束</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#86-%E5%A4%96%E9%94%AE%E7%BA%A6%E6%9D%9F-%E7%BA%A7%E8%81%94%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\"> 8.6 外键约束 - 级联操作</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#9-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\"> 9、数据库的设计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#91-%E5%A4%9A%E8%A1%A8%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\"> 9.1 多表之间的关系</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#92-%E4%B8%80%E5%AF%B9%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\"> 9.2 一对多表关系实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#93-%E5%A4%9A%E5%AF%B9%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\"> 9.3 多对多表关系实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#94-%E4%B8%80%E5%AF%B9%E4%B8%80%E8%A1%A8%E5%85%B3%E7%B3%BB%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\"> 9.4 一对一表关系实现</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#10-%E8%8C%83%E5%BC%8F\"><span class=\"toc-text\"> 10、范式</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#11-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F\"><span class=\"toc-text\"> 11、数据库的备份和还原</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#111-%E5%91%BD%E4%BB%A4%E8%A1%8C\"><span class=\"toc-text\"> 11.1 命令行</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#112-%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\"> 11.2 图形化工具</span></a></li></ol></li></ol>","author":{"name":"cCor4ng3","slug":"blog-author","avatar":"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/53BC80F5D1388E1A7955F40466B7F050.jpg","link":"/","description":"Fight 为 · Live","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"junit、反射","uid":"7ee1f34768cc2e04e0232a752344cda0","slug":"junit、注解、反射","date":"2022-06-19T12:28:37.000Z","updated":"2022-06-20T00:48:00.769Z","comments":true,"path":"api/articles/junit、注解、反射.json","keywords":null,"cover":"https://ts1.cn.mm.bing.net/th/id/R-C.e953db8584262c6d275ebb1f463e2664?rik=310ufjsemnBz1Q&riu=http%3a%2f%2fup.deskcity.org%2fpic_source%2fe9%2f53%2fdb%2fe953db8584262c6d275ebb1f463e2664.jpg&ehk=f4G2vlmXEKODWmUbTuTJbYW%2bLjy81wyNtMx3vLsrh8o%3d&risl=&pid=ImgRaw&r=0","text":"# 1、junit 单元测试 # 1.1 测试分类： 黑盒测试：不用具体关注里面的代码内容，只要输入 input，经过代码的执行查看 output 是否达到预期，不需要写测试代码 白盒测试：也需要 input 和 output，但是输入了之后代码的执行，代码的逻辑、算法、严谨度、...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":2,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":2,"path":"api/tags/JavaWeb.json"}],"author":{"name":"cCor4ng3","slug":"blog-author","avatar":"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/53BC80F5D1388E1A7955F40466B7F050.jpg","link":"/","description":"Fight 为 · Live","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}