{"title":"JavaWeb-Request&Response","uid":"a187860d1ed5ffaa4db85b694be3a055","slug":"JavaWeb-Request-Response","date":"2022-06-23T13:40:26.000Z","updated":"2022-06-23T13:43:20.587Z","comments":true,"path":"api/articles/JavaWeb-Request-Response.json","keywords":null,"cover":"https://ts1.cn.mm.bing.net/th/id/R-C.db53f2ea94b918b678faa2acfb033504?rik=3xFFRnVLjmSiPw&riu=http%3a%2f%2fimg.keaitupian.cn%2fuploads%2f2020%2f12%2f08%2fa9059e2e09c6ae8632f5952e473cef23.jpg&ehk=hf0jhNe5TPNpf53wFcpk3NwZTo5BjludcDXAo9XiYd4%3d&risl=&pid=ImgRaw&r=0","content":"<h1 id=\"1-概述\"><a class=\"markdownIt-Anchor\" href=\"#1-概述\">#</a> 1、概述</h1>\n<ul>\n<li>Request：<mark>获取</mark>请求数据</li>\n<li>Response：<mark>设置</mark>响应数据</li>\n<li>Request：\n<ul>\n<li>Request 继承体系</li>\n<li>Request 获取请求数据</li>\n<li>Request 请求转发</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"2-request继承体系\"><a class=\"markdownIt-Anchor\" href=\"#2-request继承体系\">#</a> 2、Request 继承体系</h1>\n<p><img src=\"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/image-20220623155502562.png\" alt=\"image-20220623155502562\"></p>\n<ul>\n<li>实现类由 tomcat 提供</li>\n<li>Tomcat 需要解析请求数据，封装为 request 对象，并且创建 request 对象传递到 service 方法中</li>\n<li>使用 request 对象，查阅 JavaEE API 文档的 HttpServletRequest 接口就行，因为 tomcat 是实现这个接口</li>\n<li>Request 对象全名：<mark>org.apache.catalina.connector.RequestFacade@289d4a7</mark></li>\n</ul>\n<h1 id=\"3-request获取请求数据\"><a class=\"markdownIt-Anchor\" href=\"#3-request获取请求数据\">#</a> 3、Request 获取请求数据</h1>\n<h2 id=\"31-请求行\"><a class=\"markdownIt-Anchor\" href=\"#31-请求行\">#</a> 3.1 请求行</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">GET &#x2F;request-demo&#x2F;req1?username&#x3D;zhangsan HTTP&#x2F;1.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>请求方式 资源路径 请求参数 版本</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String getMethod();</td>\n<td>获取请求方式</td>\n<td>get</td>\n</tr>\n<tr>\n<td>String getContextPath();</td>\n<td>获取虚拟目录（项目访问路径）</td>\n<td>/request-demo</td>\n</tr>\n<tr>\n<td>StringBuffer getRequestURL();</td>\n<td>获取 URL（统一资源定位符）</td>\n<td><a href=\"http://localhost:8080/request-demo/req1\">http://localhost:8080/request-demo/req1</a></td>\n</tr>\n<tr>\n<td>String getRequestURI();</td>\n<td>获取 URI（统一资源标识符）</td>\n<td>/request-demo/req1</td>\n</tr>\n<tr>\n<td>String getQueryString();</td>\n<td>获取请求参数（get 方式）</td>\n<td>username=zhangsan&amp;password=123</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"32-请求头\"><a class=\"markdownIt-Anchor\" href=\"#32-请求头\">#</a> 3.2 请求头</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">User-Agent:Mozilla&#x2F;5.0 Chrome&#x2F;91.0.4472.106<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String getHeader(String name);</td>\n<td>根据请求头名称，获取值</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"33-请求体\"><a class=\"markdownIt-Anchor\" href=\"#33-请求体\">#</a> 3.3 请求体</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">username&#x3D;zhangsan&amp;password&#x3D;123<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>ServletInputStream getInputStream (); 获取字节输入流 —— <mark>上传文件</mark></li>\n<li>BufferedReader getReader (); 获取字符输入流 —— <mark>纯文本</mark></li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>itheima<span class=\"token punctuation\">.</span>web</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebServlet</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServlet</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@WebServlet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/req-demo2\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ServletRequestDemo2</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> req<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> resp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//浏览器的版本信息</span>\n        <span class=\"token class-name\">String</span> header <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user-agent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> req<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> resp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//获取post请求体</span>\n        <span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//读取数据</span>\n        <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"34-通用方式获取请求参数\"><a class=\"markdownIt-Anchor\" href=\"#34-通用方式获取请求参数\">#</a> 3.4 通用方式获取请求参数</h2>\n<ul>\n<li>请求参数获取方式：\n<ul>\n<li>GET 方式： <code>String getQueryString()</code></li>\n<li>POST 方式： <code>BufferedReader getReader()</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/image-20220623205518967.png\" alt=\"image-20220623205518967\"></p>\n<ul>\n<li>Map&lt;String, String []&gt; getParameterMap (): 获取所有参数 Map 集合</li>\n<li>String [] getParameterValues (String name): 根据名称获取参数值 (数组)</li>\n<li>String getParameter (String name): 根据名称获取参数值 (单个值)</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>itheima<span class=\"token punctuation\">.</span>web</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebServlet</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServlet</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@WebServlet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/req-demo3\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ServletRequestDemo3</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> req<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> resp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//GET请求逻辑</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//1.获取所有参数的map集合</span>\n        <span class=\"token class-name\">Map</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> parameterMap <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameterMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key <span class=\"token operator\">:</span> parameterMap<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">+</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//获取值</span>\n            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> values <span class=\"token operator\">=</span> parameterMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> value <span class=\"token operator\">:</span> values<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取数组</span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> parameterValues <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameterValues</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hobby\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> parameterValue <span class=\"token operator\">:</span> parameterValues<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>parameterValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//根据key获取单个参数值</span>\n        <span class=\"token class-name\">String</span> parameter <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hobby\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> uusername <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> password <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>uusername<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> req<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> resp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//post请求逻辑</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li><mark>最常用的就是 getParameter</mark></li>\n</ul>\n<h2 id=\"35-请求参数中文乱码处理\"><a class=\"markdownIt-Anchor\" href=\"#35-请求参数中文乱码处理\">#</a> 3.5 请求参数中文乱码处理</h2>\n<ol>\n<li>POST</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//在前面加一行</span>\nreq<span class=\"token punctuation\">.</span><span class=\"token function\">setCharacterEncoding</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置字符输入流的编码</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>GET</li>\n</ol>\n<ul>\n<li>get 获取参数的方式：getQueryString</li>\n</ul>\n<p><img src=\"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/image-20220623212517551.png\" alt=\"image-20220623212517551\"></p>\n<ul>\n<li>做法：将解码后的数据再变成字节数据，再将字节数据使用 UTF-8 解码</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> username <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bytes <span class=\"token operator\">=</span> username<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ISO-8859-1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nusername <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">,</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n","text":"# 1、概述 Request：获取请求数据 Response：设置响应数据 Request： Request 继承体系 Request 获取请求数据 Request 请求转发 # 2、Request 继承体系 实现类由 tomcat 提供 Tomcat 需要解析请求数据，封装为 ...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\"> 1、概述</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-request%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB\"><span class=\"toc-text\"> 2、Request 继承体系</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-request%E8%8E%B7%E5%8F%96%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\"> 3、Request 获取请求数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#31-%E8%AF%B7%E6%B1%82%E8%A1%8C\"><span class=\"toc-text\"> 3.1 请求行</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#32-%E8%AF%B7%E6%B1%82%E5%A4%B4\"><span class=\"toc-text\"> 3.2 请求头</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#33-%E8%AF%B7%E6%B1%82%E4%BD%93\"><span class=\"toc-text\"> 3.3 请求体</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#34-%E9%80%9A%E7%94%A8%E6%96%B9%E5%BC%8F%E8%8E%B7%E5%8F%96%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0\"><span class=\"toc-text\"> 3.4 通用方式获取请求参数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#35-%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E5%A4%84%E7%90%86\"><span class=\"toc-text\"> 3.5 请求参数中文乱码处理</span></a></li></ol></li></ol>","author":{"name":"cCor4ng3","slug":"blog-author","avatar":"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/53BC80F5D1388E1A7955F40466B7F050.jpg","link":"/","description":"Fight 为 · Live","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Spring","uid":"946249c65165e1a3d66f50e0cb6e89e7","slug":"Spring","date":"2022-10-06T13:50:01.000Z","updated":"2022-10-06T13:53:42.739Z","comments":true,"path":"api/articles/Spring.json","keywords":null,"cover":"https://p4.ssl.cdn.btime.com/t01763f41bc4970a06e.jpg?size=1920x1080","text":"# 1、课程内容 Spring SpringMVC Maven 高级 SpringBoot MyBatisPlus # 2、Spring 课程介绍 # 2.1 为什么要学 Spring 技术是 JavaEE 开发必备技能，企业开发技术选型命中率 &gt; 90% 专业角度 简化开...","link":"","photos":[],"count_time":{"symbolsCount":"40k","symbolsTime":"36 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"author":{"name":"cCor4ng3","slug":"blog-author","avatar":"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/53BC80F5D1388E1A7955F40466B7F050.jpg","link":"/","description":"Fight 为 · Live","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"JavaWeb-Servlet","uid":"4d11604afebb47198cf52093f3d2208a","slug":"JavaWeb-Servlet","date":"2022-06-23T13:39:08.000Z","updated":"2022-06-23T13:44:15.468Z","comments":true,"path":"api/articles/JavaWeb-Servlet.json","keywords":null,"cover":"https://pic1.zhimg.com/v2-412b4bdd8a0615585a0c802d722e5dec_r.jpg?source=1940ef5c","text":" 快速入门 Servlet 执行流程 Servlet 生命周期 Servlet 体系结构 Servlet URLPattern 配置 XML 配置方式编写 Servlet # 1、快速入门 创建 web 项目，导入 servlet 依赖坐标 定义一个类，实现 Servlet 接口...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":13,"path":"api/tags/JavaWeb.json"}],"author":{"name":"cCor4ng3","slug":"blog-author","avatar":"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/53BC80F5D1388E1A7955F40466B7F050.jpg","link":"/","description":"Fight 为 · Live","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}