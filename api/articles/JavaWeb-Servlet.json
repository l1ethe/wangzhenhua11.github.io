{"title":"JavaWeb-Servlet","uid":"4d11604afebb47198cf52093f3d2208a","slug":"JavaWeb-Servlet","date":"2022-06-23T13:39:08.000Z","updated":"2022-06-23T13:44:15.468Z","comments":true,"path":"api/articles/JavaWeb-Servlet.json","keywords":null,"cover":"https://pic1.zhimg.com/v2-412b4bdd8a0615585a0c802d722e5dec_r.jpg?source=1940ef5c","content":"<ul>\n<li>快速入门</li>\n<li>Servlet 执行流程</li>\n<li>Servlet 生命周期</li>\n<li>Servlet 体系结构</li>\n<li>Servlet URLPattern 配置</li>\n<li>XML 配置方式编写 Servlet</li>\n</ul>\n<h1 id=\"1-快速入门\"><a class=\"markdownIt-Anchor\" href=\"#1-快速入门\">#</a> 1、快速入门</h1>\n<ol>\n<li>创建 web 项目，导入 servlet 依赖坐标</li>\n<li>定义一个类，实现 Servlet 接口，并重写接口中所有方法，并在 service 方法中输入一句话</li>\n<li>在类上使用 @WebServlet 注解，配置该 Servlet 访问路径</li>\n<li>访问：启动 Tomcat，浏览器输入 url 访问 Servlet</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>itheima<span class=\"token punctuation\">.</span>web</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebServlet</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@WebServlet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/demo1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ServletDemo1</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Servlet</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ServletDemo1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">CloneNotSupportedException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">finalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">finalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletConfig</span> servletConfig<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ServletConfig</span> <span class=\"token function\">getServletConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> servletRequest<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletResponse</span> servletResponse<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Servlet hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getServletInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"2-servlet执行流程\"><a class=\"markdownIt-Anchor\" href=\"#2-servlet执行流程\">#</a> 2、Servlet 执行流程</h1>\n<ol>\n<li>Servlet 由谁创建？Servlet 由谁调用？\n<ul>\n<li>Servlet 由 web 服务器创建，Servlet 方法由 web 服务器调用</li>\n</ul>\n</li>\n<li>服务器怎么知道 Servlet 中一定有 Service 方法？\n<ul>\n<li>因为我们自定义的 Servlet，必须实现 Servlet 接口并复写其方法，而 Servlet 接口中有 service 方法</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"3-生命周期\"><a class=\"markdownIt-Anchor\" href=\"#3-生命周期\">#</a> 3、生命周期</h1>\n<ul>\n<li>对象的生命周期指一个对象从被创建到被销毁的整个过程</li>\n<li>Servlet 运行在 Servlet 容器 (web 服务器) 中，其生命周期由容器来管理，分为 4 个阶段：</li>\n</ul>\n<ol>\n<li><mark>加载和实例化</mark>：默认情况下，当 Servlet 第一次被访问时，由容器创建 Servlet 对象</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">默认情况，Servlet会在第一次访问被容器创建，但是如果创建Servlet比较耗时的话，那么第一个访问的人等待的时间就比较长，用户的体验就比较差，那么我们能不能把Servlet的创建放到服务器启动的时候来创建，具体如何来配置?\n\n@WebServlet(urlPatterns = \"/demo1\",loadOnStartup = 1)\nloadOnstartup的取值有两类情况\n\t（1）负整数:第一次访问时创建Servlet对象\n\t（2）0或正整数:服务器启动时创建Servlet对象，数字越小优先级越高<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li><mark>初始化</mark>：在 Servlet 实例化之后，容器将调用 Servlet 的<mark> init ()<mark> 方法初始化这个对象，完成一些如加载配置文件、创建连接等初始化的工作。该方法只</mark>调用一次</mark></li>\n<li><mark>请求处理</mark>：<mark>每次</mark>请求 Servlet 时，Servlet 容器都会调用 Servlet 的 ==service ()== 方法对请求进行处理</li>\n<li><mark>服务终止</mark>：当需要释放内存或者容器关闭时，容器就会调用 Servlet 实例的 ==destroy ()== 方法完成资源的释放。在 destroy () 方法调用之后，容器会释放这个 Servlet 实例，该实例随后会被 Java 的垃圾收集器所回收</li>\n</ol>\n<h1 id=\"4-方法介绍\"><a class=\"markdownIt-Anchor\" href=\"#4-方法介绍\">#</a> 4、方法介绍</h1>\n<ul>\n<li>初始化方法，在 Servlet 被创建时执行，只执行一次</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletConfig</span> config<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>提供服务方法，每次 Servlet 被访问，都会调用该方法</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">void</span> <span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> servletRequest<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletResponse</span> servletResponse<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>销毁方法，当 Servlet 被销毁时，调用该方法，在内存释放或服务器关闭时销毁 Servlet</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">void</span> <span class=\"token function\">destory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>获取 ServletConfig 对象</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">ServletConfig</span> <span class=\"token function\">getServletConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul>\n<li>获取 Servlet 信息</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> <span class=\"token function\">getServletInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"5-servlet体系结构\"><a class=\"markdownIt-Anchor\" href=\"#5-servlet体系结构\">#</a> 5、Servlet 体系结构</h1>\n<p><img src=\"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/image-20220623105110152.png\" alt=\"image-20220623105110152\"></p>\n<p>我们将来开发 B/S 架构的 web 项目，都是针对 HTTP 协议，所以我们自定义 Servlet，会继承 HttpServlet</p>\n<ul>\n<li>手写 Servlet 实现方法，这个代码</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">service</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequest</span> servletRequest<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ServletResponse</span> servletResponse<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ServletException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//根据请求方式不同进行分别处理</span>\n    <span class=\"token class-name\">HttpServletRequest</span> request <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">)</span> servletRequest<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//1.获取请求方式</span>\n    <span class=\"token class-name\">String</span> method <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//2.判断</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//get方式的处理逻辑</span>\n        <span class=\"token function\">doget</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//post方式的处理逻辑</span>\n        <span class=\"token function\">dopost</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"6-servlet-urlpattern配置\"><a class=\"markdownIt-Anchor\" href=\"#6-servlet-urlpattern配置\">#</a> 6、Servlet URLPattern 配置</h1>\n<ul>\n<li>Servlet 想要被访问，必须配置其访问路径 (urlPattern)</li>\n</ul>\n<ol>\n<li>一个 Servlet，可以配置多个 URLPattern\n<ul>\n<li>@WebServlet(urlPatterns = {&quot;/demo1&quot;, “/demo2”})</li>\n</ul>\n</li>\n<li>URLPattern 配置规则\n<ul>\n<li>①精确匹配 ②目录匹配 ③扩展名匹配 ④任意匹配</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/image-20220623111500801.png\" alt=\"image-20220623111500801\"></p>\n<h1 id=\"7-xml配置servlet\"><a class=\"markdownIt-Anchor\" href=\"#7-xml配置servlet\">#</a> 7、XML 配置 Servlet</h1>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>demo13<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>com.itheima.web.ServletDemo13<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>demo13<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/demo13<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":true,"text":" 快速入门 Servlet 执行流程 Servlet 生命周期 Servlet 体系结构 Servlet URLPattern 配置 XML 配置方式编写 Servlet # 1、快速入门 创建 web 项目，导入 servlet 依赖坐标 定义一个类，实现 Servlet 接口...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":8,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":8,"path":"api/tags/JavaWeb.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8\"><span class=\"toc-text\"> 1、快速入门</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-servlet%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\"> 2、Servlet 执行流程</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\"><span class=\"toc-text\"> 3、生命周期</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\"> 4、方法介绍</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-servlet%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84\"><span class=\"toc-text\"> 5、Servlet 体系结构</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-servlet-urlpattern%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\"> 6、Servlet URLPattern 配置</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#7-xml%E9%85%8D%E7%BD%AEservlet\"><span class=\"toc-text\"> 7、XML 配置 Servlet</span></a></li></ol>","author":{"name":"cCor4ng3","slug":"blog-author","avatar":"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/53BC80F5D1388E1A7955F40466B7F050.jpg","link":"/","description":"Fight 为 · Live","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JavaWeb-Request&Response","uid":"a187860d1ed5ffaa4db85b694be3a055","slug":"JavaWeb-Request-Response","date":"2022-06-23T13:40:26.000Z","updated":"2022-06-23T13:43:20.587Z","comments":true,"path":"api/articles/JavaWeb-Request-Response.json","keywords":null,"cover":"https://ts1.cn.mm.bing.net/th/id/R-C.db53f2ea94b918b678faa2acfb033504?rik=3xFFRnVLjmSiPw&riu=http%3a%2f%2fimg.keaitupian.cn%2fuploads%2f2020%2f12%2f08%2fa9059e2e09c6ae8632f5952e473cef23.jpg&ehk=hf0jhNe5TPNpf53wFcpk3NwZTo5BjludcDXAo9XiYd4%3d&risl=&pid=ImgRaw&r=0","text":"# 1、概述 Request：获取请求数据 Response：设置响应数据 Request： Request 继承体系 Request 获取请求数据 Request 请求转发 # 2、Request 继承体系 实现类由 tomcat 提供 Tomcat 需要解析请求数据，封装为 ...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":8,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":8,"path":"api/tags/JavaWeb.json"}],"author":{"name":"cCor4ng3","slug":"blog-author","avatar":"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/53BC80F5D1388E1A7955F40466B7F050.jpg","link":"/","description":"Fight 为 · Live","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"JavaWeb-MyBatis","uid":"fa6e3171176b562ddf4dd344027e42d6","slug":"JavaWeb-MyBatis","date":"2022-06-23T13:38:28.000Z","updated":"2022-06-23T13:42:51.159Z","comments":true,"path":"api/articles/JavaWeb-MyBatis.json","keywords":null,"cover":"https://ts1.cn.mm.bing.net/th/id/R-C.7ca23706fd0f74a4551bafede5e6930d?rik=Z57iEINc3DWm1w&riu=http%3a%2f%2fpic.bizhi360.com%2fbbpic%2f78%2f9778_7.jpg&ehk=CrUCvCFqAFu2FWqg7B6dSV59DKJZQQKmMXu7f%2fwsPJQ%3d&risl=&pid=ImgRaw&r=0","text":"# 1、Mybatis 概述 # 1.1 Mybatis 概念 MyBatis 是一款优秀的持久层框架，用于简化 JDBC 开发 MyBatis 本是 Apache 的一个开源项目 iBatis, 2010 年这个项目由 apache software foundation 迁移...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"JavaWeb","slug":"JavaWeb","count":8,"path":"api/categories/JavaWeb.json"}],"tags":[{"name":"JavaWeb","slug":"JavaWeb","count":8,"path":"api/tags/JavaWeb.json"}],"author":{"name":"cCor4ng3","slug":"blog-author","avatar":"http://wuriteup.oss-cn-qingdao.aliyuncs.com/img/53BC80F5D1388E1A7955F40466B7F050.jpg","link":"/","description":"Fight 为 · Live","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}